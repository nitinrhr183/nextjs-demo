{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\NEXTJSLEARN\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/Head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetUpDetails = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Add your own meetups and create amazing networking oppurtunities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://nitin_123:mongodblitmus@cluster0.muo4n.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db(); //connects to meetups db\n  //picks the table\n\n  const meetupsCollection = db.collection(\"meetupcollection\"); //need the IDS for paths..\n\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  //fetch data for a single meetup;\n  const meetupId = context.params.meetupId;\n  console.log(meetupId); ////////////\n\n  const client = await MongoClient.connect(\"mongodb+srv://nitin_123:mongodblitmus@cluster0.muo4n.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db(); //connects to meetups db\n  //picks the table\n\n  const meetupsCollection = db.collection(\"meetupcollection\"); //need the IDS for paths..\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close(); /////////////////////\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n};\nexport default MeetUpDetails;","map":{"version":3,"sources":["D:/NEXTJSLEARN/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","Head","MeetupDetail","MeetUpDetails","props","meetupData","title","image","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","selectedMeetup","findOne","id"],"mappings":"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","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport Head from \"next/Head\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nconst MeetUpDetails = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.meetupData.title}</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Add your own meetups and create amazing networking oppurtunities\"\r\n        />\r\n      </Head>\r\n      <MeetupDetail\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://nitin_123:mongodblitmus@cluster0.muo4n.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db(); //connects to meetups db\r\n  //picks the table\r\n  const meetupsCollection = db.collection(\"meetupcollection\");\r\n\r\n  //need the IDS for paths..\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  //fetch data for a single meetup;\r\n  const meetupId = context.params.meetupId;\r\n\r\n  console.log(meetupId);\r\n  ////////////\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://nitin_123:mongodblitmus@cluster0.muo4n.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db(); //connects to meetups db\r\n  //picks the table\r\n  const meetupsCollection = db.collection(\"meetupcollection\");\r\n\r\n  //need the IDS for paths..\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  client.close();\r\n  /////////////////////\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n};\r\nexport default MeetUpDetails;\r\n"]},"metadata":{},"sourceType":"module"}